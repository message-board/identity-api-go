openapi: "3.0.0"
info:
  version: 1.0.0
  title: Message Board Identity
  description: TODO
  contact:
    name: TODO
    url: https://todo/
servers:
  - url: https://{hostname}/api
    variables:
      hostname:
        default: localhost
security:
  - bearerAuth: []
paths:
  /users:
    get:
      operationId: getUsers
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: createUser
      requestBody:
        description: todo
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      respnoses:
        '204':
          description: todo
          content:
            application/json:
              schema:
                $ref: ''
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}:
    get:
      operationId: getUser
      parameters:
        - in: path
          name: userId
          schema:
            type: string
            format: uuid
          required: true
          description: todo
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateUserRequest:
      type: object
      required: [id, emailAddress, password]
      properties:
        id:
          type: string
          format: uuid
        emailAddress:
          type: string
          format: email
        password:
          type: string
          format: password
    User:
      type: object
      required: [id, emailAddress]
      properties:
        id:
          type: string
          format: uuid
        emailAddress:
          type: string
          format: email
    Users:
      type: object
      required: [users]
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
    Error:
      type: object
      required:
        - slug
        - message
      properties:
        slug:
          type: string
        message:
          type: string